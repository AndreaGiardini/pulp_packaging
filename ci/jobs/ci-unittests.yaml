- job-template:
    name: '{topology}-unittest-1-provision'
    defaults: ci-workflow-provision
    node: master
    parameters:
        - choice:
            name: SITE
            choices:
              - qeos
              - os1
            description: |
              Site where to provision resources
        - string:
            name: PULP_GIT_PULP_BRANCH
            default: master
            description: |
                The branch of the Pulp platform to run the unit tests against.
        - string:
            name: PULP_GIT_PULP_RPM_BRANCH
            default: master
            description: |
                The branch of the Pulp RPM plugin to run the unit tests against.
        - string:
            name: PULP_GIT_PULP_PUPPET_BRANCH
            default: master
            description: |
                The branch of the Pulp Puppet plugin to run the unit tests against.
        - string:
            name: PULP_GIT_NECTAR_BRANCH
            default: master
            description: |
                The branch of nectar to run the unit tests against.
        - string:
            name: PULP_GIT_GOFER_BRANCH
            default: master
            description: |
                The branch of gofer to run the unit tests against.

    builders:
        - shell: |
            #!/bin/bash

            cp -v -R $QEOS_CONFIG_ZIP/config/* $WORKSPACE/{jslavename_path}

            export JSLAVENAME={topology}-{jslavename}
            # Provision Jenkins Slave
            if [ "$JSLAVENAME" != "master" ]
            then
                $WORKSPACE/ci-ops-central/bootstrap/provision_jslave.sh --project_defaults={project_defaults} \
                --ssh_keyfile={ssh_keyfile}  \
                --jslavename=$JSLAVENAME --site=$SITE --jslave_execs={jslave_execs} \
                --jslavecreate --resources_file={jslavename}.json --topology={topology_path}/{topology}

                TR_STATUS=$?
                if [ "$TR_STATUS" != 0 ]; then echo "ERROR: Provisioning\nSTATUS: $TR_STATUS"; exit 1; fi
            fi

            files=$(ls $WORKSPACE/*.slave 2>/dev/null)
            if [ -e "$files" ]
            then
                cat $WORKSPACE/*.slave >> $WORKSPACE/RESOURCES.txt
            fi

        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

    publishers:
      - archive:
          artifacts: '*.txt, *.json'
          allow-empty: 'true'
      - trigger-parameterized-builds:
          - project: '{topology}-unittest-2-runtest'
            current-parameters: true
            condition: 'SUCCESS'
            property-file: $WORKSPACE/RESOURCES.txt
            fail-on-missing: true
          - project: '{topology}-unittest-3-teardown'
            current-parameters: true
            condition: 'UNSTABLE_OR_WORSE'
            property-file: $WORKSPACE/RESOURCES.txt
            fail-on-missing: true
      - default-ci-workflow-publishers


- job-template:
    name: '{topology}-unittest-2-runtest'
    defaults: ci-workflow-runtest
    node: '{topology}-{jslavename}'
    scm:
        - git:
            url: 'https://github.com/pulp/pulp.git'
            branches:
                - origin/$PULP_GIT_PULP_BRANCH
            basedir: pulp
            skip-tag: True
        - git:
            url: 'https://github.com/pulp/pulp_rpm.git'
            branches:
                - origin/$PULP_GIT_PULP_RPM_BRANCH
            basedir: pulp_rpm
            skip-tag: True
        - git:
            url: 'https://github.com/pulp/pulp_puppet.git'
            branches:
                - origin/$PULP_GIT_PULP_PUPPET_BRANCH
            basedir: pulp_puppet
            skip-tag: True
        - git:
            url: 'https://github.com/pulp/nectar.git'
            branches:
                - origin/$PULP_GIT_NECTAR_BRANCH
            basedir: nectar
            skip-tag: True
        - git:
            url: 'https://github.com/jortel/gofer.git'
            branches:
                - origin/$PULP_GIT_GOFER_BRANCH
            basedir: gofer
            skip-tag: True
    builders:
        - copyartifact:
            project: '{topology}-unittest-1-provision'
            filter: '*.txt, *.json'
            target: $WORKSPACE

        - shell: |
            #!/bin/bash
            echo "Setting up after source control extract"
            env
            OS_NAME=$(lsb_release -si)
            OS_VERSION=$(lsb_release -sr | cut -f1 -d.)
            setenforce 0
            cd $WORKSPACE

            # Turn on tty for sudo
            sed -i 's|Defaults[ ]*requiretty|#Defaults    requiretty|g' /etc/sudoers
            set -x

            yum -y install python-mock tito rpm-build python-lxml python-paste
            sudo pip install coverage nose nosexcover --upgrade

            # TODO Enable testing/beta
            if [ "$OS_NAME" == "RedHatEnterpriseServer" ]; then
                curl -o /etc/yum.repos.d/rhel-pulp.repo https://repos.fedorapeople.org/repos/pulp/pulp/rhel-pulp.repo
            else
                curl -o /etc/yum.repos.d/fedora-pulp.repo https://repos.fedorapeople.org/repos/pulp/pulp/fedora-pulp.repo
            fi

            yum -y install @pulp-server @pulp-admin @pulp-consumer
            yum -y remove pulp-\* python-pulp\*

            service mongod restart
            service qpidd restart

            rm -rf $WORKSPACE/test
            mkdir -p $WORKSPACE/test
            rm -rf $WORKSPACE/coverage
            mkdir -p $WORKSPACE/coverage

            useradd pulp
            chown -R pulp:pulp $WORKSPACE

            bash $WORKSPACE/pulp/playpen/ci/setup.sh
            # bash -ex $WORKSPACE/pulp/playpen/ci/run_tests.sh

            cd $WORKSPACE/pulp
            sudo -u pulp python ./run-tests.py -v --enable-coverage --with-xunit --xunit-file ../test/pulp_test.xml --with-xcoverage --xcoverage-file ../coverage/pulp_coverage.xml

    publishers:
      - cobertura:
          report-file: 'coverage/*.xml'
          fail-no-reports: true
          targets:
            - lines:
                healthy: 80.0
                unhealthy: 0.0
                failing: 0.0
      # Publish a pretty graph of the test results
      - junit:
          results: 'test/*.xml'
          keep-long-stdio: true
          test-stability: true
      # Archive the test results
      - archive:
          artifacts: 'test/**'
          allow-empty: 'true'
      # Tear down all the instances that were provisioned
      - trigger-parameterized-builds:
          - project: '{topology}-unittest-3-teardown'
            current-parameters: true
      - default-ci-workflow-publishers

- job-template:
    name: '{topology}-unittest-3-teardown'
    defaults: ci-workflow-provision
    node: master
    builders:
        - shell: |
            #!/bin/bash
            export JSLAVETEARDOWN={jslaveteardown}

            # Give it some time for the previous jenkins job to clean up so the teardown will complete properly
            echo 'sleeping for 1 minute so that previous job can clean up'
            sleep 60

            cp -v -R $QEOS_CONFIG_ZIP/config/* $WORKSPACE/{jslavename_path}

            if [ "$JSLAVETEARDOWN" == "True" ]
            then
              $WORKSPACE/ci-ops-central/bootstrap/teardown_jslave.sh --site=$SITE --project_defaults={project_defaults} \
              --jslavename=ci-ops-central/project/config/aio_jslave --jslavename=$JSLAVENAME \
              --jslaveusername={jslaveusername} --ssh_keyfile={ssh_keyfile} --jslaveip=$JSLAVEIP --jslaveteardown \
              --topology={topology_path}/{topology}

              TR_STATUS=$?
              if [ "$TR_STATUS" != 0 ]; then echo "ERROR: Teardown\nSTATUS: $TR_STATUS"; exit 1; fi
            fi

- job-group:
    name: 'unittest-jobs'
    jobs:
      - '{topology}-unittest-1-provision'
      - '{topology}-unittest-2-runtest'
      - '{topology}-unittest-3-teardown'
- project:
    name: unit-tests
    project:
     - workflow
    project_defaults:
     - pulp_packaging/ci/config/project_defaults
    jslavename_path:
     - pulp_packaging/ci/config
    ssh_keyfile:
     - pulp_packaging/ci/config/keys/pulp-ci-key.pem
    jobs:
     - 'unittest-jobs'
    topology_path:
     - pulp_packaging/ci/config
    topology:
     - fc19
     - fc20
#     - rhel5
     - rhel6
     - rhel7
    jslavename:
     - 'unittest-slave'
    jslave_execs:
     - 2
    jslaveusername:
     - root
    jslaveteardown:
     - True
